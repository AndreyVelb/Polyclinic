<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="integration.repository.newdb.PatientOldDBNewDBRepositoryTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2022-02-06T14:54:35" hostname="LAPTOP-FD196OTM" time="0.345">
  <properties/>
  <testcase name="delete()" classname="integration.repository.newdb.PatientOldDBNewDBRepositoryTest" time="0.259"/>
  <testcase name="findAll()" classname="integration.repository.newdb.PatientOldDBNewDBRepositoryTest" time="0.016"/>
  <testcase name="update()" classname="integration.repository.newdb.PatientOldDBNewDBRepositoryTest" time="0.044"/>
  <testcase name="findById()" classname="integration.repository.newdb.PatientOldDBNewDBRepositoryTest" time="0.012"/>
  <testcase name="save()" classname="integration.repository.newdb.PatientOldDBNewDBRepositoryTest" time="0.012"/>
  <system-out><![CDATA[Hibernate: 
    
    create table appointment_records (
       id int8 generated by default as identity,
        doctors_recommendation varchar(255),
        health_complaints varchar(255),
        visit_date date,
        doctor_id int8 not null,
        patient_id int8 not null,
        primary key (id)
    )
Hibernate: 
    
    create table patients (
       id int8 generated by default as identity,
        birthDate date,
        firstName varchar(255),
        lastName varchar(255),
        middleName varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table polyclinics_doctors (
       id int8 generated by default as identity,
        first_name varchar(255),
        last_name varchar(255),
        login varchar(255) not null,
        middle_name varchar(255),
        password varchar(255),
        qualification varchar(255),
        speciality varchar(255),
        primary key (id)
    )
Hibernate: 
    
    alter table if exists polyclinics_doctors 
       drop constraint if exists UK_2ykj8r8sk89syus70lfijto1q
Hibernate: 
    
    alter table if exists polyclinics_doctors 
       add constraint UK_2ykj8r8sk89syus70lfijto1q unique (login)
Hibernate: 
    
    alter table if exists appointment_records 
       add constraint FKlxtf57rmf8e6tub7b055nmu0h 
       foreign key (doctor_id) 
       references polyclinics_doctors
Hibernate: 
    
    alter table if exists appointment_records 
       add constraint FKm38udhs0083bwvnogh0klbch0 
       foreign key (patient_id) 
       references patients
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    insert 
    into
        patients
        (birthDate, firstName, lastName, middleName) 
    values
        (?, ?, ?, ?)
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    delete 
    from
        patients 
    where
        id=?
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    insert 
    into
        patients
        (birthDate, firstName, lastName, middleName) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patients
        (birthDate, firstName, lastName, middleName) 
    values
        (?, ?, ?, ?)
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    insert 
    into
        patients
        (birthDate, firstName, lastName, middleName) 
    values
        (?, ?, ?, ?)
Hibernate: 
    update
        patients 
    set
        birthDate=?,
        firstName=?,
        lastName=?,
        middleName=? 
    where
        id=?
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    insert 
    into
        patients
        (birthDate, firstName, lastName, middleName) 
    values
        (?, ?, ?, ?)
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
Hibernate: 
    insert 
    into
        patients
        (birthDate, firstName, lastName, middleName) 
    values
        (?, ?, ?, ?)
Hibernate: 
    select
        patientnew0_.id as id1_1_,
        patientnew0_.birthDate as birthdat2_1_,
        patientnew0_.firstName as firstnam3_1_,
        patientnew0_.lastName as lastname4_1_,
        patientnew0_.middleName as middlena5_1_ 
    from
        patients patientnew0_
]]></system-out>
  <system-err><![CDATA[log4j:WARN No appenders could be found for logger (org.testcontainers.utility.TestcontainersConfiguration).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
]]></system-err>
</testsuite>
